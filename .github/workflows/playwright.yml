name: Playwright Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  schedule:
    # Run tests daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        project: [chromium, firefox, webkit]
        
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
      
    - name: Create environment file
      run: |
        echo "BASE_URL=https://www.saucedemo.com" >> .env
        echo "API_BASE_URL=https://api.saucedemo.com" >> .env
        echo "TIMEOUT=30000" >> .env
        echo "HEADLESS=true" >> .env
        echo "BROWSER=chromium" >> .env
        
    - name: Run Playwright tests
      run: npx playwright test --project=${{ matrix.project }}
      env:
        CI: true
        
    - name: Upload Playwright Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report-${{ matrix.project }}
        path: reports/html-report/
        retention-days: 30
        
    - name: Upload Screenshots
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: playwright-screenshots-${{ matrix.project }}
        path: screenshots/
        retention-days: 7
        
    - name: Upload Videos
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: playwright-videos-${{ matrix.project }}
        path: screenshots/videos/
        retention-days: 7

  # API testing
  api-tests:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run API tests
      run: npx playwright test tests/api/ --project=chromium
      env:
        CI: true
        API_BASE_URL: https://api.saucedemo.com
        
    - name: Upload API Test Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: api-test-results
        path: reports/
        retention-days: 30

  # Notification job
  notify:
    runs-on: ubuntu-latest
    needs: [test, api-tests]
    if: always()
    
    steps:
    - name: Notify on failure
      if: failure()
      run: |
        if [ -n "${{ secrets.SLACK_WEBHOOK }}" ]; then
          curl -X POST -H 'Content-type: application/json' \
          --data '{
            "channel": "#test-failures",
            "text": "❌ Playwright tests failed in ${{ github.repository }}",
            "attachments": [
              {
                "color": "danger",
                "fields": [
                  {
                    "title": "Branch",
                    "value": "${{ github.ref_name }}",
                    "short": true
                  },
                  {
                    "title": "Commit",
                    "value": "${{ github.sha }}",
                    "short": true
                  },
                  {
                    "title": "Build URL",
                    "value": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}",
                    "short": false
                  }
                ]
              }
            ]
          }' \
          "${{ secrets.SLACK_WEBHOOK }}"
        else
          echo "SLACK_WEBHOOK secret not configured, skipping notification"
        fi
        
    - name: Notify on success
      if: success()
      run: |
        if [ -n "${{ secrets.SLACK_WEBHOOK }}" ]; then
          curl -X POST -H 'Content-type: application/json' \
          --data '{
            "channel": "#test-results",
            "text": "✅ Playwright tests passed in ${{ github.repository }}",
            "attachments": [
              {
                "color": "good",
                "fields": [
                  {
                    "title": "Branch",
                    "value": "${{ github.ref_name }}",
                    "short": true
                  },
                  {
                    "title": "Commit",
                    "value": "${{ github.sha }}",
                    "short": true
                  }
                ]
              }
            ]
          }' \
          "${{ secrets.SLACK_WEBHOOK }}"
        else
          echo "SLACK_WEBHOOK secret not configured, skipping notification"
        fi
